// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM16K[address(t)](t)
 *     Write: If load(t-1) then RAM16K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel[0..1]=address[0..1], a=r1load, b=r2load, c=r3load, d=r4load);
    RAM4K(in[0..15]=in[0..15], load=r1load, address[0..11]=address[2..13], out[0..15]=r1out);
    RAM4K(in[0..15]=in[0..15], load=r2load, address[0..11]=address[2..13], out[0..15]=r2out);
    RAM4K(in[0..15]=in[0..15], load=r3load, address[0..11]=address[2..13], out[0..15]=r3out);
    RAM4K(in[0..15]=in[0..15], load=r4load, address[0..11]=address[2..13], out[0..15]=r4out);
    Mux4Way16(a[0..15]=r1out, b[0..15]=r2out, c[0..15]=r3out, d[0..15]=r4out, sel[0..1]=address[0..1], out[0..15]=out[0..15]);
}
